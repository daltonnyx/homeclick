//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Homeclick.vn.Module.BusinessObjects
{
    using System;
    using System.Collections.Generic;
    
    using DevExpress.Xpo;
    using System.ComponentModel.DataAnnotations.Schema;
    using DevExpress.ExpressApp.ConditionalAppearance;
    using DevExpress.ExpressApp.Editors;
    using DevExpress.Persistent.Base;
    using DevExpress.ExpressApp.Model;
    public partial class Cart: XPLiteObject
    {
    	//VNB: Cart
        public Cart()
        {
            //VNB disable: this.Canvas = new List<Canva>();
        }
    
        private int _id;
    	[DevExpress.Xpo.Key(true)]
    	[Required]
    	public int Id 
    	{ 
    		get { return _id; } 
    		set
    		{
    			if (value != _id) {
    				_id = value;
    				 OnIdChanged();
    			}
    		} 
    	}
    	partial void OnIdChanged(); 
    
        private int _user_id;
    	[Required]
    	public int user_id 
    	{ 
    		get { return _user_id; } 
    		set
    		{
    			if (value != _user_id) {
    				_user_id = value;
    				 Onuser_idChanged();
    			}
    		} 
    	}
    	partial void Onuser_idChanged(); 
    
        private System.DateTime _created_date;
    	[Required]
    	public System.DateTime created_date 
    	{ 
    		get { return _created_date; } 
    		set
    		{
    			if (value != _created_date) {
    				_created_date = value;
    				 Oncreated_dateChanged();
    			}
    		} 
    	}
    	partial void Oncreated_dateChanged(); 
    
        private short _status;
    	[Required]
    	public short status 
    	{ 
    		get { return _status; } 
    		set
    		{
    			if (value != _status) {
    				_status = value;
    				 OnstatusChanged();
    			}
    		} 
    	}
    	partial void OnstatusChanged(); 
    
    
        [Association(@"CartsCanvasReferences", typeof(Canva))]
    	public  XPCollection<Canva> DanhSachCanvas { get{{ return GetCollection<Canva>("DanhSachCanvas"); }} }
    
        private User _UserId;
    	[ImmediatePostData]
    	[Association(@"UserCartsReferences", typeof(User))]
    	public  User UserId { get {return _UserId;} set{ SetPropertyValue<User>("UserId", ref _UserId, value); } }
    
    }
}
