//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Homeclick.vn.Module.BusinessObjects
{
    using System;
    using System.Collections.Generic;
    
    using DevExpress.Xpo;
    using System.ComponentModel.DataAnnotations.Schema;
    using DevExpress.ExpressApp.ConditionalAppearance;
    using DevExpress.ExpressApp.Editors;
    using DevExpress.Persistent.Base;
    using DevExpress.ExpressApp.Model;
    public partial class Post: XPLiteObject
    {
    	//VNB: Post
        public Post()
        {
            //VNB disable: this.Post_details = new List<Post_detail>();
            //VNB disable: this.Categories = new List<Category>();
            //VNB disable: this.PostChildren = new List<Post>();
        }
    
        private int _id;
    	[DevExpress.Xpo.Key(true)]
    	[Required]
    	public int Id 
    	{ 
    		get { return _id; } 
    		set
    		{
    			if (value != _id) {
    				_id = value;
    				 OnIdChanged();
    			}
    		} 
    	}
    	partial void OnIdChanged(); 
    
        private string _title;
    	[Required]
    	public string title 
    	{ 
    		get { return _title; } 
    		set
    		{
    			if (value != _title) {
    				_title = value;
    				 OntitleChanged();
    			}
    		} 
    	}
    	partial void OntitleChanged(); 
    
        private string _alias;
    	[Required]
    	public string alias 
    	{ 
    		get { return _alias; } 
    		set
    		{
    			if (value != _alias) {
    				_alias = value;
    				 OnaliasChanged();
    			}
    		} 
    	}
    	partial void OnaliasChanged(); 
    
        private string _content;
    	[Size(SizeAttribute.Unlimited)]
    	public string content 
    	{ 
    		get { return _content; } 
    		set
    		{
    			if (value != _content) {
    				_content = value;
    				 OncontentChanged();
    			}
    		} 
    	}
    	partial void OncontentChanged(); 
    
        private int _author_id;
    	[Required]
    	public int author_id 
    	{ 
    		get { return _author_id; } 
    		set
    		{
    			if (value != _author_id) {
    				_author_id = value;
    				 Onauthor_idChanged();
    			}
    		} 
    	}
    	partial void Onauthor_idChanged(); 
    
        private System.DateTime _created_date;
    	[Required]
    	public System.DateTime created_date 
    	{ 
    		get { return _created_date; } 
    		set
    		{
    			if (value != _created_date) {
    				_created_date = value;
    				 Oncreated_dateChanged();
    			}
    		} 
    	}
    	partial void Oncreated_dateChanged(); 
    
        private System.DateTime _updated_date;
    	[Required]
    	public System.DateTime updated_date 
    	{ 
    		get { return _updated_date; } 
    		set
    		{
    			if (value != _updated_date) {
    				_updated_date = value;
    				 Onupdated_dateChanged();
    			}
    		} 
    	}
    	partial void Onupdated_dateChanged(); 
    
        private Nullable<int> _parent_id;
    	public Nullable<int> parent_id 
    	{ 
    		get { return _parent_id; } 
    		set
    		{
    			if (value != _parent_id) {
    				_parent_id = value;
    				 Onparent_idChanged();
    			}
    		} 
    	}
    	partial void Onparent_idChanged(); 
    
        private short _status;
    	[Required]
    	public short status 
    	{ 
    		get { return _status; } 
    		set
    		{
    			if (value != _status) {
    				_status = value;
    				 OnstatusChanged();
    			}
    		} 
    	}
    	partial void OnstatusChanged(); 
    
        private bool _featured;
    	[Required]
    	public bool featured 
    	{ 
    		get { return _featured; } 
    		set
    		{
    			if (value != _featured) {
    				_featured = value;
    				 OnfeaturedChanged();
    			}
    		} 
    	}
    	partial void OnfeaturedChanged(); 
    
        private string _excerpt;
    	[Required]
    	[Size(SizeAttribute.Unlimited)]
    	public string excerpt 
    	{ 
    		get { return _excerpt; } 
    		set
    		{
    			if (value != _excerpt) {
    				_excerpt = value;
    				 OnexcerptChanged();
    			}
    		} 
    	}
    	partial void OnexcerptChanged(); 
    
        private string _image;
    	[Required]
    	public string image 
    	{ 
    		get { return _image; } 
    		set
    		{
    			if (value != _image) {
    				_image = value;
    				 OnimageChanged();
    			}
    		} 
    	}
    	partial void OnimageChanged(); 
    
    
        [Association(@"Post_detailsPostsReferences", typeof(Post_detail))]
    	public  XPCollection<Post_detail> DanhSachPost_details { get{{ return GetCollection<Post_detail>("DanhSachPost_details"); }} }
    
        [Association(@"PostsCategoriesReferences", typeof(Category))]
    	public  XPCollection<Category> DanhSachCategories { get{{ return GetCollection<Category>("DanhSachCategories"); }} }
    
        private User _UserId;
    	[ImmediatePostData]
    	[Association(@"UserPostsReferences", typeof(User))]
    	public  User UserId { get {return _UserId;} set{ SetPropertyValue<User>("UserId", ref _UserId, value); } }
    
        [Association(@"PostPostReferences", typeof(Post))]
    	public  XPCollection<Post> DanhSachPostChildren { get{{ return GetCollection<Post>("DanhSachPostChildren"); }} }
    
        private Post _PostId;
    	[ImmediatePostData]
    	[Association(@"PostPostReferences", typeof(Post))]
    	public  Post PostParentId { get {return _PostId;} set{ SetPropertyValue<Post>("PostId", ref _PostId, value); } }
    
    }
}
