@using Homeclick.Models;
@model IEnumerable<Project>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_SharedLayout.cshtml";
    var url = "";
    var categories = ViewBag.Categories as IEnumerable<Homeclick.Models.Category>;
    var categoryValue = Request.RequestContext.RouteData.Values["category_id"];
}

    <div class="main-body">
        <div id="projectsGrid" class="clearfix">
            @foreach (var item in Model)
            {
                var dataStr = "data-name=\"['" + @item.Name.ToLower() + "']\"";
                dataStr = dataStr + " data-i=\"['" + @item.Investor.ToLower() + "']\"";
                dataStr = dataStr + " data-a=\"['" + @item.ArchitetualDesignAgency.ToLower() + "']\"";
                dataStr = dataStr + " data-f=\"['" + @item.FurnitureDesignAgency.ToLower() + "']\"";
                dataStr = dataStr + " data-v=\"['" + @item.ViewDesignAgency.ToLower() + "']\"";
                dataStr = dataStr + " data-c=\"['" + @item.ConstructionAgency.ToLower() + "']\"";
                dataStr = dataStr + " data-d=\"['" + @item.DistributionAgency.ToLower() + "']\"";
                dataStr = dataStr + " data-m=\"['" + @item.Manager.ToLower() + "']\"";

                <div class="project-tile col-xs-6 col-md-4 mix category-@item.CategoryId city-@item.CityId state-@item.StateId status-@item.Completed.ToString()" @dataStr>
                    <div class="project-tile-image fullscreener fsr-container">
                        <img width="650" height="420" src="@item.Image" class="attachment-project-image size-project-image wp-post-image fsr-image fsr-hidden" alt="Helsinki-Central-Library">
                    </div>
                    <div class="project-tile-overlay">
                        <h4>@item.Name</h4>
                        <a href="' + link + '" class="button tiny">Xem chi tiết <i class="fa fa-search" aria-hidden="true"></i></a>
                    </div>
                </div>
            }
        </div>

        <div class="control-bar">
            <ul class="pager-list pagination">
                <!-- Pagination buttons will be generated here -->
            </ul>
        </div>
    </div>

@section breadcrumb {
<ul>
    <li><a href="../">Home</a></li>
    <li>Dự án</li>
</ul>
}

@section styles {
    <link href="~/Content/Project.css" rel="stylesheet" />
    <style>
        #projectsGrid {
            overflow:hidden;
        }
        .mix {
            display: none;
        }
        
    </style>
}

@section scripts {
    <script src="~/Scripts/Plugins/mixitup/jquery.mixitup.js"></script>
    <script src="~/Scripts/Plugins/mixitup/jquery.mixitup.pagination.min.js"></script>

    <script>
    (function ($) {
        $.fn.toggleAtrr = function (atrr) {
            if ($(this).attr('checked'))
                $(this).removeAttr('checked')
            else
                $(this).attr('checked', 'checked');
        };
    })(jQuery);

    var citySelection = $('#projectCitiesSelection');
    var statesSelection = $('#statesSelection');

    var statuCheckers = [
        $('#statu-true'),
        $('#statu-false')
    ];

    var filterTextBox = $('#filterTextBox');
    var filterButton = $('#filterButton');
    var projectsGrid = $('#projectsGrid');

    citySelection.bind("change", function () {
        //Get states
        statesSelection.html('');
        var item = '<option selected value="">Quận</option>';
        statesSelection.append(item)

        if ($(this).val()) {
            var url = '@Url.Action("GetStates", "JSON")';
            var states = $.getJsonFromUrl(url, { 'city_id': citySelection.val() })

            for (var i = 0; i < states.length; i++) {
                item = '<option value="' + states[i].id + '">' + states[i].name + '</option>';
                statesSelection.append(item);
            }
        }
        selectChanged();
    });

    statesSelection.bind("change", function () {

        selectChanged();
    });

    statuCheckers[0].bind("change", function () {
        $(this).toggleAtrr('checked')
        selectChanged();
    });

    statuCheckers[1].bind("change", function () {
        $(this).toggleAtrr('checked')
        selectChanged();
    });

    filterButton.bind("click", function () {
        selectChanged();
    });

    filterTextBox.bind("change", function () {
        selectChanged();
    });

    function selectChanged() {
        var citySelectionVal = citySelection.val();
        var statesSelectionVal = statesSelection.val();
        var filterTextBoxVal = filterTextBox.val();
        var filter = '';


        if (filterTextBoxVal) {
            var manageradiorel = $('input[name="a"]:checked').val();
            var dataAttrVal = '[data-' + manageradiorel + '*="' + filterTextBox.val().replace(/ /, '-') + '"]';
            filterTextBox.attr('data-filter', dataAttrVal);
            filter = filterTextBox.attr('data-filter');
        }
        else
            filterTextBox.attr('data-filter', '');

        if (category_id != -1)
            filter = ".category-" + category_id;

        if (citySelection.val()) {
            filter = filter + ".city-" + citySelectionVal;  
        }

        if (statesSelectionVal) {
            filter = filter + ".state-" + statesSelectionVal;
        }

        if (statuCheckers[0].attr('checked') && statuCheckers[1].attr('checked')) {

        }
        else if (statuCheckers[0].attr('checked')) {
            filter = filter + ".status-" + statuCheckers[0].val();
        }
        else if (statuCheckers[1].attr('checked')) {
            filter = filter + ".status-" + statuCheckers[1].val();
        }

        if (filter == '')
            filter = 'all';

        container.mixItUp('filter', filter);
    }

    var container = $('#projectsGrid');
    var category_id = '-1';

    $('.category-link').bind('click', function () {
        $('.category-link').removeClass('active');
        $(this).addClass('active');
        category_id = $(this).data('category');
        selectChanged();
    });

    jQuery(document).ready(function ($) {
        container.mixItUp({
            pagination: {
                limit: 6,
                generatePagers: !0,
            },
        });
    });
</script>
}