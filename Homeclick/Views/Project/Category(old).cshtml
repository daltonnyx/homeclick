@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_SharedLayout.cshtml";
    var url = "";
}

<div class="main-body row">
    <div id="projectsGrid" class="clearfix">

    </div>

    <div id="projectsLoading" class="loading" style="display: none;">
        <img class="loadingImg" src="@url/Content/loading.gif" height="150" width="150" />
    </div>
</div>

@section breadcrumb {
    <ul>
        <li><a href="../">Home</a></li>
        <li>Dự án</li>
    </ul>
}

@section styles {
    <link href="~/Content/Project.css" rel="stylesheet" />
    <style>
    </style>
}

@section scripts {
    <script type='text/javascript' src="~/Scripts/Plugins/jlinq/jlinq.js"></script>
    <script type='text/javascript' src="~/Scripts/Plugins/Map/map.js"></script>

    <script>

        (function ($) {
            $.fn.toggleAtrr = function (atrr) {
                if ($(this).attr('checked'))
                    $(this).removeAttr('checked')
                else
                    $(this).attr('checked', 'checked');
            };
        })(jQuery);

        var jsonData = [];
        var typeSelection = $('#projectTypeSelection');
        var citySelection = $('#projectCitiesSelection');
        var statesSelection = $('#statesSelection');

        var statuCheckers = [
            $('#statu-true'),
            $('#statu-false')
        ];

        var filterTextBox = $('#filterTextBox');
        var filterButton = $('#filterButton');
        var projectsGrid = $('#projectsGrid');

        typeSelection.bind("change", function () {
            selectChanged();
        });

        citySelection.bind("change", function () {
            //Get states
            statesSelection.html('');
            var item = '<option selected value="">Quận</option>';
            statesSelection.append(item)

            if ($(this).val()) {
                var url = '@Url.Action("GetStates", "JSON")';
                var states = $.getJsonFromUrl(url, { 'city_id': citySelection.val() })

                for (var i = 0; i < states.length; i++) {
                    item = '<option value="' + states[i].id + '">' + states[i].name + '</option>';
                    statesSelection.append(item);
                }
            }

            selectChanged();
        });

        statesSelection.bind("change", function () {

            selectChanged();
        });

        statuCheckers[0].bind("change", function () {
            $(this).toggleAtrr('checked')
            selectChanged();
        });

        statuCheckers[1].bind("change", function () {
            $(this).toggleAtrr('checked')
            selectChanged();
        });

        filterButton.bind("click", function () {
            selectChanged();
        });

        filterTextBox.bind("change", function () {
            selectChanged();
        });

        function selectChanged() {
            var typeSelectionVal = typeSelection.val();
            var citySelectionVal = citySelection.val();
            var statesSelectionVal = statesSelection.val();
            var filterTextBoxVal = filterTextBox.val();

            var result = jsonData;

            if (typeSelectionVal)
                result = filterByField(result, 'type', typeSelectionVal)

            if (citySelectionVal)
                result = filterByField(result, 'city' ,citySelectionVal)

            if (statesSelectionVal)
                result = filterByField(result, 'state', statesSelectionVal)

            if (statuCheckers[0].attr('checked') && statuCheckers[1].attr('checked')) {
            }
            else if (statuCheckers[0].attr('checked')) {
                result = filterByField(result, 'statu', statuCheckers[0].val())
            }
            else if (statuCheckers[1].attr('checked')) {
                result = filterByField(result, 'statu', statuCheckers[1].val())
            }
            else {
                return;
            }

            if (filterTextBoxVal) {
                var manageradiorel = $('input[name="a"]:checked').val();
                result = filterByField(result, manageradiorel, filterTextBoxVal)
            }

            showProjects(result);
        }

        function showProjects(data) {
            projectsGrid.html('');
            var baseLink = '@Url.Action("Details")';
            for (var i = 0; i < data.length; i++) {
                var link = '@Url.Action("Details")' + '?category_id=' + data[i].type + '&project_id=' + data[i].id;
                var item = '<div class="project-tile  col-xs-6 col-md-4">' +
                    '<div class="project-tile-image fullscreener fsr-container">' +
                        '<img width="650" height="420" src="' + data[i].image + '" class="attachment-project-image size-project-image wp-post-image fsr-image fsr-hidden" alt="Helsinki-Central-Library">' +
                        '</div>' +
                        '<div class="project-tile-overlay">' +
                            '<h4>' + data[i].name + '</h4>' +
                            '<a href="' + link + '" class="button tiny">Xem chi tiết <i class="fa fa-search" aria-hidden="true"></i></a>' +
                        '</div>' +
                    '</div>';
                projectsGrid.append(item);
            }
        }

        var category_id = '@Request.Params["category_id"]';
        jQuery(document).ready(function ($) {
            var url = '@Url.Action("GetProjectsData", "JSON")'
            var data = $.getJsonFromUrl(url, { 'category_id': category_id });
            jsonData = data;
            showProjects(jsonData);
        });

    </script>
}