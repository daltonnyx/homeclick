@{
    ViewBag.Title = Resource.Product;
    Layout = "~/Views/Shared/_SharedLayout.cshtml";
    var url = "";
}

<div class="part-page product-feature" id="list_product_feature">
    <div class="title-page title-feature">
        <h1 class="">@ViewBag.Title</h1>
    </div>
    <div class="order clearfix" style="height:42px; margin-bottom:10px;">
        <div class="result-search">

        </div>
        <select id="select-order">
            <option value="ASC">Giá thấp đến cao</option>
            <option value="DES">Giá cao đến thấp</option>
        </select>
    </div>
    <div class="content-product-feature">
        <div class="feature-items row">

        </div>
    </div>
    <div id="panigation" class="paginationjs-theme-blue">

    </div>
</div>

@section breadcrumb {
    <ul>
        <li><a href="@Url.Action("Index","Home")">Home</a></li>
        <li>Sản phẩm</li>
    </ul>
}

@section styles {
    <link href="~/Scripts/Plugins/noUiSlider/nouislider.min.css" rel="stylesheet" />
    <link href="~/Scripts/Plugins/panigation/panigation.css" rel="stylesheet" />
    <style>
        #slider-snap {
            margin: 20px 0;
            padding: 0 16px;
        }

        .material-list li {
            margin-left: 15px;
            margin-top: 5px;
        }

            .material-list li input {
                margin-right: 10px !important;
            }

        .paginationjs {
            float: right;
        }
    </style>
}

@section scripts {
    <script src="~/Scripts/Plugins/noUiSlider/nouislider.min.js"></script>
    <script src="~/Scripts/Plugins/mixitup/jquery.mixitup.js"></script>
    <script src="~/Scripts/Plugins/jlinq/jlinq.js"></script>
    <script src="~/Scripts/Plugins/panigation/panigation.min.js"></script>
    <script type="text/javascript">

        //snap
        var snapSlider = document.getElementById('slider-snap');

        noUiSlider.create(snapSlider, {
            start: [0, 10000000],
            snap: true,
            connect: true,
            range: {
                'min': 0,
                '15%': 1500000,
                '30%': 3000000,
                '45%': 4500000,
                '60%': 6000000,
                '75%': 7500000,
                'max': 10000000
            }
        });

        var snapValues = [
	        document.getElementById('slider-snap-value-lower'),
	        document.getElementById('slider-snap-value-upper')
        ];

        Number.prototype.format = function (n, x, s, c) {
            var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\D' : '$') + ')',
                num = this.toFixed(Math.max(0, ~~n));

            return (c ? num.replace('.', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || ','));
        };

        snapSlider.noUiSlider.on('update', function (values, handle) {
            var val = parseInt(values[handle]);
            snapValues[handle].innerHTML = val.format(0, 3, '.') + ' vnđ';
            $(snapValues[handle]).data('value', values);

            if (currentTypoData) {
                showProducts(filter(currentTypoData));
            }
        });

        //
        var currentTypoData = [];
        var currentCategoryData = [];
        var maxProductValue = 0;
        var currentCategoryId = '@Request.Params["category_id"]';
        var currentTypoId = '@Request.Params["typo_id"]';
        var currentCategory = null;
        var currentTypo = null;
        var pageSize = 16;

        $('#select-order').bind('change', function(){
            showProducts(filter(currentTypoData));
        });

        function filter(sourceData) {
            var minmax = $(snapValues).data('value'),
                data = [],
                dataResult = [],
                min = parseInt(minmax[0]),
                max = parseInt(minmax[1]);
            if (min == max)
                data = jlinq.from(sourceData).greater('value', min).select();
            else
                data = jlinq.from(sourceData).greater('value', min).notGreater('value', max).select();

            var selectedMetarials = [];
            var checkers = $('.material-checker:checked');
            for (var i = 0; i < checkers.length; i++) {
                selectedMetarials[i] = parseInt($(checkers[i]).val());
            }

            if (selectedMetarials.length > 0) {
                for (var i = 0; i < data.length; i++) {
                    var has = false;
                    for (var j = 0; j < data.length; j++) {
                        var c = jlinq.from(data[i].materials).equals('id', selectedMetarials[j]).select();
                        if (c.length > 0) {
                            has = true;
                            dataResult.push(data[i]);
                            break;
                        }
                    }
                }
            }
            else {
                dataResult = data;
            }
            return dataResult;
        }

        function showProducts(data) {
            data = jlinq.from(data).sort(($('#select-order').val() == 'ASC')? 'value' : '-value').select();

            $('#panigation').toggle(data.length > pageSize);
            $('#select-order').toggle(data.length > 0);

            var container = $('.feature-items');
            var h = container.height();
            container.css('height', h);
            container.children().fadeOut('fast');
            $(this).delay('250').queue(function () {
                if (data.length == 0) {
                    $('.result-search').html('<span style="font-size: 20px; padding:0 7px; line-height: 42px;">Không tìm thấy sản phẩm nào...</span>');
                }
                else {
                    $('.result-search').html('<span style="font-size: 20px; padding:0 7px; line-height: 42px;">' + data.length + ' sản phẩm</span>');

                    $('#panigation').pagination({
                        dataSource: data,
                        pageSize: pageSize,
                        autoHidePrevious: true,
                        autoHideNext: true,
                        callback: function (pagidata, pagination) {
                            container.html('');
                            for (var i = 0; i < pagidata.length; i++) {
                                var item = '<div class="item-product col-xs-6 col-md-4 col-lg-3"">' +
                                                '<div class="image">' +
                                                    '<a href="@Url.Action("Product_Detail","SanPham")' + '/' + pagidata[i].id + '"><img src="' + '@url' + '/' + pagidata[i].image + '" alt="" /></a>' +
                                                '</div>' +
                                                '<div class="detail-item">' +
                                                    '<h3 class="title-item"><a href="@Url.Action("Product_Detail","SanPham")' + '/' + pagidata[i].id + '">' + pagidata[i].name + '</a></h3>' +
                                                    '<p>' + parseInt(pagidata[i].value).format(0, 3, '.') + ' vnđ</p>' +
                                              '</div>' +
                                          '</div>';
                                $('.feature-items').append(item);
                            }
                        }
                    })
                }
                container.css('height', 'auto');
                $(this).dequeue();
            });
        }

        function getMetarials(category_id, category_id) {
            url = '@Url.Action("GetMetarialsJson")';
            $.ajax({
                type: "GET",
                url: url,
                data: { 'category_id': category_id, 'category_id': category_id },
                success: function (data) {
                    $('.material-list').empty();
                    for (var i = 0; i < data.length; i++) {
                        var item = '<li><input class="filter material-checker" data-filter=".material-' + data[i].id + '" type="checkbox" value="' + data[i].id + '" />' + data[i].name + '</li>';
                        $('.material-list').append(item);
                    }

                    $('.material-checker').bind('click', function () {
                        showProducts(filter(currentTypoData));
                    });

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log('error','Failed to retrieve data!');
                }
            });
        }

        function getProducts(category_id, typo_id) {
            var url = '@Url.Action("ProductsJson")';
            currentCategoryData = $.getJsonFromUrl(url, { 'category_id': category_id });
            currentTypoData = refineProductsByTypo(currentCategoryData, typo_id);
            showProducts(filter(currentTypoData));
        }

        function refineProductsByTypo(data, typo) {
            var result = [];
            if (typo > 0)
                result = jLinq.from(data).equals('typo', typo).select();
            else
                result = currentCategoryData;
            return result;
        }


        $(document).ready(function () {

            currentCategory = $('#sidebar .category-link').filter('[data-category="' + currentCategoryId + '"]').first();
            if (!currentTypoId) {
                currentTypoId = -1;
            }
            currentTypo = currentCategory.find('li[data-typo="' + currentTypoId + '"]').first();

            if (!currentCategory)
                currentCategory = $('#sidebar .nav').children().first();

            if (currentCategory) {
                currentCategoryId = currentCategory.data('category');
                if (!currentTypo) {
                    currentTypo = currentCategory.children('.descendant-cat').children().first();
                    currentTypoId = activeChild.data('typo');
                }

                currentTypo.addClass('active');
                getProducts(currentCategoryId, parseInt(currentTypoId));
                getMetarials(currentCategoryId, parseInt(currentTypoId));
            }

            $('.typo-link > a').bind('click', function (event) {
                if (currentTypo) {
                    currentTypo.removeClass('active');
                }
                currentTypo = $(this).parent();
                currentTypo.addClass('active');
                currentTypoId = currentTypo.data('typo');

                currentTypoData = refineProductsByTypo(currentCategoryData, currentTypoId);
                showProducts(filter(currentTypoData));
                getMetarials(currentCategoryId, currentTypoId);
                event.preventDefault();
            });
        });
    </script>
}