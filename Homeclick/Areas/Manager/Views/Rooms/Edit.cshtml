@using VCMS.Lib.Common
@using VCMS.Lib.Models
@using VCMS.Lib.Resources
@model Room

@{
    ViewBag.Title = Strings.Rooms;
    ViewBag.FormName = (Model != null) ? ((Model.Floor != null) ? Model.Floor.Name + " - " : string.Empty) + Model.Name : "Create new Floor";
}

<div class="content">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        if (Model != null)
        {
            @Html.HiddenFor(m => m.Id);
        }
        <div class="row">
            <fieldset class="col-md-9">
                <div class="form-group">
                    <div class="form-group-title">
                        <h3>Data</h3>
                    </div>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name" })
                    @Html.ValidationMessageFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Description, new { @class = "form-control", placeholder = "Description" })
                    @Html.ValidationMessageFor(m => m.Description)
                    @Html.TextBoxFor(m => m.BoundaryWidth, new { @class = "form-control", type = "number", placeholder = "Boundary Width (cm)" })
                    @Html.ValidationMessageFor(m => m.BoundaryWidth)
                </div>
                @if (Model != null)
                {
                    <div class="form-group">
                        <div class="form-group-title">
                            <h3>Collection</h3>
                        </div>
                        @if (Model.Collections.Count == 0)
                        {
                            <i>Empty!</i>
                        }
                        else
                        {
                            foreach (var collection in Model.Collections)
                            {
                                <div class="form-control">
                                    <a href="@Url.Action("Edit", "Room", new { collection_id = collection.Id })">@collection.Title</a>
                                </div>
                            }
                        }
                        <p>
                            @Html.ActionLink("Add collection", "Create", "Collections", null, new { target="_blank"})
                        </p>
                    </div>
                }
            </fieldset>

            <fieldset class="col-lg-3">
                <div class="form-group">
                    <div class="form-group-title">
                        <h3>Floor</h3>
                    </div>
                    <select id="@ConstantKeys.PROJECTS" name="@ConstantKeys.PROJECTS" data-parentof="#@ConstantKeys.DEPARTMENTS" data-fetch="@Url.GetBaseUrl()/manager/rooms/getdepartmentasync/" class="form-control-custom chosen" style="display:none" data-placeholder="Select">
                        @foreach(Project project in ViewData[ConstantKeys.PROJECTS] as IEnumerable<Project>)
                        {
                            <option value="@project.Id" @if (project.Id == Model?.Floor?.Department?.ProjectId) { @Html.Raw("selected") }>@project.Name</option>
                        }
                    </select>
                    <select id="@ConstantKeys.DEPARTMENTS" name="@ConstantKeys.DEPARTMENTS" data-parentof="#@Html.NameFor(n => n.FloorId)" data-fetch="@Url.GetBaseUrl()/manager/rooms/getfloorasync/" class="form-control-custom chosen" style="display:none" data-placeholder="Select">
                        @foreach(Department department in (ViewData[ConstantKeys.DEPARTMENTS] as IEnumerable<Department>).Where(d => d.ProjectId == Model?.Floor?.Department?.ProjectId))
                        {
                            <option value="@department.Id" @if (department.Id == Model?.Floor?.DepartmentId) { @Html.Raw("selected") }>@department.Name</option>
                        }
                    </select>
                    <select id="@Html.NameFor(n =>n.FloorId)" name="@Html.NameFor(n => n.FloorId)" class="form-control-custom chosen" data-placeholder="Select" style="display:none">
                        @foreach(Floor floor in (ViewData[ConstantKeys.FLOORS] as IEnumerable<Floor>).Where(f => f.DepartmentId == Model?.Floor?.DepartmentId))
                        {
                            <option value="@floor.Id" @if (floor.Id == Model.FloorId) { @Html.Raw("selected")}>@floor.Name</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(m => m.FloorId)
                </div>
                <hr />
                <div class="form-group">
                    <h3>Image</h3>
                    @{
                        var param = new Dictionary<string, object>
                        {
                            { "File", Model?.ImageId != null ? Model.Image.FullFileName : string.Empty },
                            { ConstantKeys.FIELD_NAME, Html.NameFor(m => m.ImageId).ToString() },
                            { "Multiple", false },
                            { "Accept" , "image/*"},
                            { "FileManagerId", "#lgx94" }
                        };
                        @Html.Partial("Widgets/SelectImages", param)
                    }
                </div>
                <hr />
                <div class="form-group">
                    <h3>Svg File</h3>
                    @{
                        param = new Dictionary<string, object>
                        {
                            { "File", Model?.SvgFileId != null ? Model.SvgFile.FullFileName : string.Empty },
                            { ConstantKeys.FIELD_NAME, Html.NameFor(m => m.SvgFileId).ToString() },
                            { "Multiple", false },
                            { "Accept" , ".svg"},
                            { "FileManagerId", "#lgx94" }
                        };
                        @Html.Partial("Widgets/SelectImages", param)
                    }
                </div>
            </fieldset>
        </div>
        <hr />
        <div class="clearfix">
            <input type="submit" value="@Strings.SaveChanged" class="btn btn-primary pull-right" />
        </div>
    }
</div>

@{
    var fileManagerParam = new Dictionary<string, object> {
            { "ContainerId" , "lgx94"}
    };
    @Html.Partial("Widgets/FileManager", fileManagerParam)
}

@section breadcrumb {
    <li>
        <a href="@Url.Action("Dashboard","Pages")">
            <i class="fa fa-home"></i> Home
        </a>
        <span class="divider"><i class="fa fa-angle-right"></i></span>
    </li>
    <li>
        <a href="@Url.Action("List")">
            @ViewBag.Title
        </a>
        <span class="divider"><i class="fa fa-angle-right"></i></span>
    </li>
    <li class="active">@ViewBag.FormName</li>
}


@section Styles {
    <link href="~/Areas/Manager/Content/lib/jquery-chosen/Chosen.min.css" rel="stylesheet" />
    <link href="~/Areas/Manager/Content/css/loading.css" rel="stylesheet" />
    @Html.RenderDelayed("jquery-uploads-style")
    @Html.RenderDelayed("FileManager-style")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Areas/Manager/Content/lib/jquery-chosen/chosen.jquery.min.js"></script>
    @Html.RenderDelayed("jquery-uploads-js")
    @Html.RenderDelayed("SelectImages-function", true)
    @Html.RenderDelayed("SelectImages-script")
    @Html.RenderDelayed("FileManager-script")
    <script type="text/javascript">
        jQuery(document).ready(function ($) {
            $("select[data-parentof]").on("change", function (event, params) {
                var url = $(this).data("fetch"), childElm = $(this).data("parentof");
                $.ajax({
                    url: url + this.value,
                    method: "GET",
                    contentType: "application/json",
                    beforeSend: function () {
                        $(childElm).children().remove();
                        $(childElm).val(0).trigger("change");
                    }
                }).done(function (data, status, xhr) {
                    if (typeof data == "object" && data.length > 0) {
                        $(childElm).append('<option value="0">Select</option>');
                        for (var i = 0; i < data.length; i++) {
                            $(childElm).append('<option value="' + data[i].Id + '">' + data[i].Name + '</option>');
                        }
                    }
                }).always(function () {
                    $(childElm).trigger("chosen:updated");
                });
            });
        });
    </script>
}
