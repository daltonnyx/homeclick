@using VCMS.Lib.Controllers
@using VCMS.Lib.Models.Business
@{
    var controller = ViewContext.Controller as BaseController;
    var controllerName = ViewContext.RouteData.Values["controller"].ToString().ToLower();
    var db = controller.GetDbContext();
}


<div id="sidebar" class="navbar-collapse collapse">
    <!-- BEGIN Navlist -->
    <ul class="nav nav-list" style="height: auto; overflow: hidden; width: auto;">
        <!-- BEGIN Search Form -->
        <li>
            <form target="#" method="GET" class="search-form">
                <span class="search-pan">
                    <button type="submit">
                        <i class="fa fa-search"></i>
                    </button>
                    <input type="text" name="search" placeholder="Search ..." autocomplete="off">
                </span>
            </form>
        </li>
        <!-- END Search Form -->
        <li data-page="Dashboard">
            <a href="@Url.Action("Index", "Dashboard")">
                <i class="fa fa-dashboard"></i>
                <span>Dashboard</span>
            </a>
        </li>

        <li>
            <a href="#" class="dropdown-toggle">
                <i class="fa fa-desktop"></i>
                <span>System</span>
                <b class="arrow fa fa-angle-right"></b>
            </a>

            <!-- BEGIN Submenu a-->
            <ul class="submenu">
                <li data-page="users"><a href="@Url.Action("List", "Users")">Users</a></li>
                <li data-page="roles"><a href="@Url.Action("List", "Roles")">Roles</a></li>
            </ul>
            <!-- END Submenu -->
        </li>

        <li class="@Html.Raw(controllerName == "products" ||controllerName == "productvariants" ? "active" : "")">
            <a class="dropdown-toggle">
                <i class="fa fa-square-o"></i>
                <span>Products</span>
                <b class="arrow fa fa-angle-right"></b>
            </a>

            <!-- BEGIN Submenu -->
            <ul class="submenu">
                @{ 
                    var variantCategories = db.Categories.Where(o => o.Category_TypeId == (int)CategoryTypes.ProductVariant);
                    var currentCategoryId = int.Parse(Request.Params["categoryId"] ?? "-1");

                    }
                <li class="@Html.Raw(variantCategories.Select(o => o.Id).Contains(currentCategoryId) ? "active" : "")">
                    <span>Variants</span>
                    <ul>
                        @foreach (var category in variantCategories)
                        {
                            <li class="@Html.Raw(currentCategoryId == category.Id ? "active" : "")"><a href="@Url.Action("List", "ProductVariants",new { categoryId = category.Id})">@category.Name</a></li>
                        }
                    </ul>
                </li>
                <li data-page="products"><a href="@Url.Action("List", "Products")">Products</a>
                    @if (Request.Params["productId"] != null || Request.Params["optionId"] != null)
                    {
                        var product = 
                            db.Products.Find(int.Parse(Request.Params["productId"] ?? "-1")) ?? 
                            db.Product_Options.Find(int.Parse(Request.Params["optionId"] ?? "-1")).Product;
                        if (product != null)
                        {
                            <ul>
                                <li class="active">
                                    <a href="@Url.Action(ViewContext.RouteData.Values["action"].ToString(), new { productId = product.Id })">@product.name</a>
                                </li>
                            </ul>
                        }
                    }
                </li>
                <li data-page="featureproducts"><a href="@Url.Action("List", "FeatureProducts")">Features</a></li>
                <li data-page="productsale"><a href="@Url.Action("List", "ProductSale")">Sale</a></li>
                <li>
                    <span>Categories</span>
                    <ul>
                        @{ var rooms = db.Categories.Where(o => o.Category_TypeId == (int)CategoryTypes.Model);
                            foreach (var room in rooms)
                            {
                                <li data-page="rooms-@room.Id">
                                    <a href="@Url.Action("Index", "Rooms", new { id = room.Id })">@room.Name</a>
                                </li>
                            }
                        }
                    </ul>
                </li>
            </ul>
            <!-- END Submenu -->
        </li>
        <li>
            <a class="dropdown-toggle">
                <i class="fa fa-square-o"></i>
                <span>Collections</span>
                <b class="arrow fa fa-angle-right"></b>
            </a>
            <ul class="submenu">
                <li data-page="collections"><a href="@Url.Action("List", "collections")">All Collections</a></li>
                <li>
                    <span>Categories</span>
                    <ul>
                        @{ var cCollections = db.Categories.Where(o => o.Category_TypeId == (int)CategoryTypes.Collection);
                            foreach (var cCollection in cCollections)
                            {
                                if (cCollection.CategoryParents.Count == 0)
                                {
                                    <li data-page="collections-@cCollection.Id">
                                        <a href="@Url.Action("Index", "collections", new { id = cCollection.Id })">@cCollection.Name</a>
                                    </li>
                                }
                            }
                        }
                    </ul>
                </li>
            </ul>
        </li>
        <li class="@Html.Raw(controllerName == "slides" ? "active" : "")">
            <a class="dropdown-toggle">
                <i class="fa fa-square-o"></i>
                <span>Slides</span>
                <b class="arrow fa fa-angle-right"></b>
            </a>
            <ul class="submenu">
                @foreach (var category in db.Categories.Where(o => o.Category_TypeId == (int)CategoryTypes.Slide))
                {
                    <li><a href="@Url.Action("List", "Slides", new { categoryId = category.Id})">@category.Name</a></li>
                }
            </ul>
        </li>
        <li>
            <a class="dropdown-toggle">
                <i class="fa fa-square-o"></i>
                <span>Categories</span>
                <b class="arrow fa fa-angle-right"></b>
            </a>
            <ul class="submenu">
                <li data-page="categories">
                    <a href="@Url.Action("List", "CategoryTypes")">Types</a>
                    <ul>
                        @{ var categoryTypes = db.Category_types;
                            foreach (var categoryType in categoryTypes)
                            {
                                <li data-page="categorytypes-@categoryType.Id">
                                    <a href="@Url.Action("Index", "CategoryTypes", new { id = categoryType.Id })">@categoryType.Name</a>
                                </li>
                            }
                        }
                    </ul>
                </li>
            </ul>
        </li>
        <li>
            <a class="dropdown-toggle">
                <i class="fa fa-square-o"></i>
                <span>Manager</span>
                <b class="arrow fa fa-angle-right"></b>
            </a>

            <!-- BEGIN Submenu -->
            <ul class="submenu">
                <li data-page="filemanager"><a href="@Url.Action("List","FileManager")">File Manager</a></li>
            </ul>
            <!-- END Submenu -->
        </li>
    </ul>
    <!-- END Navlist -->
    <!-- BEGIN Sidebar Collapse Button -->
    <div id="sidebar-collapse" class="visible-lg">
        <i class="fa fa-angle-double-left"></i>
    </div>
    <!-- END Sidebar Collapse Button -->
</div>