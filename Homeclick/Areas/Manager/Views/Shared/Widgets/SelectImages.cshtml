@* Delayeds:
    Libs: JqueryUpload
            Style: @Html.RenderDelayed("jquery-uploads-style")
            Js:    @Html.RenderDelayed("jquery-uploads-js")
    Scripts
        @Html.RenderDelayed("SelectImages-function")
        @Html.RenderDelayed("SelectImages-script")
*@

@using VCMS.Lib.Common
@using VCMS.Lib.Models

@model object

@{ 
    var dic = Model as IDictionary<string, object>;
    if (dic == null)
    {
        dic = Model.ToDictionary();
    }
    var file = dic.ContainsKey("File") ? dic["File"] as string : null;
    var files = dic.ContainsKey("Files") ? dic["Files"] as IEnumerable<string> : null;
    var fieldName = dic[ConstantKeys.FIELD_NAME] as string;
    var multiple = dic.ContainsKey("Multiple") ? (bool)dic["Multiple"] : false;
    var hasFile = multiple ? (files != null && files.Count() > 0) : (file != string.Empty);
    var containerId = dic.ContainsKey("ContainerId") ? (string)dic["ContainerId"] : Html.RandomString(32);
    var accept = dic.ContainsKey("Accept") ? dic["Accept"] as string : string.Empty;
    var fileManagerId = dic.ContainsKey("FileManagerId") ? dic["FileManagerId"] as string : null;
    var isCustomField = dic.ContainsKey("IsCustomField") ? (bool)dic["IsCustomField"] : false;
}

    <div id="@containerId" data-is-customfield="@isCustomField.ToString().ToLower()">
        <div class="file-uploaded">
            @if (multiple)
            {
                <div class="file-uploaded-border">
                    <ol class="file-list">
                        @if (files != null)
                        {
                            foreach (var itemName in files)
                            {
                                var fileNameWithoutExt = Path.GetFileNameWithoutExtension(itemName);
                                <li class="file @Html.Raw(isCustomField ? string.Empty : "form-group-custom-field")">
                                    <input type="checkbox" id="@fileNameWithoutExt" />
                                    <label for="@fileNameWithoutExt">
                                        <img src="@Url.GetImageUploadFolder()@itemName" />
                                        <input type="hidden" name="@fieldName" value="@fileNameWithoutExt"/>
                                    </label>
                                </li>
                            }
                        }
                    </ol>
                </div>
            }
            else
            {
                if (hasFile)
                {
                    <div class="file-uploaded-single img-thumbnail">
                        <img src="@Url.GetImageUploadFolder()@file">
                        <input type="hidden" name="@fieldName" data-file="@file" value="@Path.GetFileNameWithoutExtension(file)" />
                    </div>
                }
            }
        </div>
        @if (!multiple)
        {
            <div class="file-upload-empty" @Html.Raw(hasFile ? "style='display:none'" : "")>
                <span><i>No selected file</i></span>
            </div>
        }

        <div class="clearfix m-t-15">
            @if (fileManagerId != null || fileManagerId != string.Empty)
            {
                <span class="btn btn-circle open-lib m-r-5" data-toggle="modal" data-target="@fileManagerId" data-field-name="@fieldName" data-is-customfield="@isCustomField.ToString().ToLower()" data-multiple="@multiple.ToString().ToLower()" data-container-id="@containerId">
                    <i class="fa fa-folder"></i>
                </span>
            }
            <span class="btn btn-circle fileinput-button m-r-5">
                <i class="fa fa-upload"></i>
                <input class="fileupload" type="file" name="files" @Html.Raw(multiple ? "multiple" : string.Empty) accept="@accept">
            </span>

            <span class="btn btn-circle file-remove-btn" @Html.Raw(!hasFile ? "style='display:none'" : "") data-multiple="@multiple.ToString().ToLower()" data-container-id="@containerId">
                <i class="fa fa-times"></i>
            </span>

            <div class="cssload-container fileuploadProgress" style="display:none">
                <div class="cssload-speeding-wheel"></div>
            </div>
        </div>
    </div>

@using (Html.Delayed("jquery-uploads-style", isOnlyOne: "jquery-uploads-style"))
{
    <link href="~/Areas/Manager/Content/lib/jQueryFileUpload/css/jquery.fileupload.css" rel="stylesheet" />
    <link href="~/Areas/Manager/Content/lib/jQueryFileUpload/css/jquery.fileupload-ui.css" rel="stylesheet" />
}

@using (Html.Delayed("jquery-uploads-js", isOnlyOne: "jquery-uploads-js"))
{
    <script src="~/Areas/Manager/Content/lib/jQueryFileUpload/js/vendor/jquery.ui.widget.js"></script>
    <script src="~/Areas/Manager/Content/lib/jQueryFileUpload/js/jquery.iframe-transport.js"></script>
    <script src="~/Areas/Manager/Content/lib/jQueryFileUpload/js/jquery.fileupload.js"></script>
}

@using (Html.Delayed("SelectImages-function", isOnlyOne: "SelectImagesFunction"))
{
    <script>
        function addImg(containerDivId, isMultiple , file, fieldName) {
            var fileName = file.newFileName + file.ext;
            var $container = $('#' + containerDivId);
            $container.find('.file-upload-empty').hide();
            $container.find('.file-remove-btn').show();

            if (isMultiple) {
                var $li = $('<li class="file"/>');

                if ($container.data('is-customfield') == true)
                    $li.addClass('form-group-custom-field');

                var $input = $('<input type="checkbox"/>').attr('id', file.newFileName).data('file',fileName).appendTo($li);
                var $label = $('<label/>').attr('for',file.newFileName).appendTo($li);
                switch(file.ext){
                    case '.gif': case '.jpg': case '.png':
                        var $img = $('<img/>').attr('src','@Url.GetImageUploadFolder()' + fileName).appendTo($label);
                        break;
                    default:
                        break;
                }
                var $hidden = $('<input type="hidden"/>').attr('name', fieldName).val(file.newFileName).appendTo($label);
                $container.find('.file-list').append($li);
            }
            else{
                var $div = $('<div class="file file-uploaded-single img-thumbnail"/>').hide();
                switch(file.ext){
                    case '.gif': case '.jpg': case '.png':
                        var $img = $('<img/>').attr('src', '@Url.GetImageUploadFolder()' + fileName).appendTo($div);
                        break;
                    default:
                        var $a = $('<a/>').attr('href', '@Url.GetImageUploadFolder()' + fileName).text(fileName).appendTo($div);
                        break;
                }
                var $inp = $('<input type="hidden"/>').attr('data-file', fileName).attr('name', fieldName).val(file.newFileName).appendTo($div);
                $container.find('.file-uploaded').html($div);
                $div.prependTo($container.find('.file-uploaded')).fadeIn('fast');
            }

            var $form = $container.parents('form');
            var $formGroupCustoms = $form.find('.form-group-custom-field');
            for (var i = 0; i < $formGroupCustoms.length; i++) {
                var $current = $($formGroupCustoms[i]);
                var $inputs = $current.find('input[name]');
                for (var j = 0; j < $inputs.length; j++) {
                    var $input =$($inputs[j]);
                    var inputAtrrName = $input.attr('name');
                    var newName = inputAtrrName.replace(/\[(.+?)\]/,'[' + i + ']');
                    $input.attr('name',newName);
                }
            }
        }

        function removeImg(containerDivId, isMultiple) {
            var $container = $('#' + containerDivId);
            if (isMultiple) {
                var $inputs = $container.find('input:checked');
                for (var i = 0; i < $inputs.length; i++) {
                    $($inputs[i]).parent().remove();
                }

                if ($container.find('.file-list').children().length == 0)
                    $container.find('.file-remove-btn').hide();
            }
            else {
                var $input = $('#@containerId').find('.file-uploaded-single input');
                $input.parent().remove();
                $container.find('.file-upload-empty').fadeIn('fast');
                $container.find('.file-remove-btn').hide();
            }
        }

        $('.file-remove-btn').bind('click', function(){
            removeImg($(this).data('container-id'), $(this).data('multiple'));
        });
    </script>
}

@using (Html.Delayed("SelectImages-script"))
{
    <script>
        $('#@containerId').find('.fileupload').fileupload({
            url:'@Url.Action("Uploads", "FileUpload")',
            dataType: 'json',
            formData: { fileGroup: @Convert.ToInt32(FileGroups.Other) },
            maxFileSize: 999000,
            //acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            done: function (e, data) {
                $.each(data.result, function (index, file) {
                    var a = $('#@containerId .file-uploaded-single input').val();
                    if (a)
                        $.ajax({
                            url: '@Url.Action("Delete", "FileManager")',
                            type: 'DELETE',
                            data: { 'id': a },
                            traditional: true,
                            success: function () {
                                $('#@containerId').find('.file-uploaded-single').remove();
                                $('#@containerId').find('.file-upload-new').fadeIn('fast');
                                $('#@containerId').find('.file-remove-btn').hide();
                                addImg('@containerId', @multiple.ToString().ToLower(), file, @fieldName);
                            }
                        });
                    else
                        addImg('@containerId', @multiple.ToString().ToLower(), file, @fieldName);
                });
            },
            always: function(e, data){
                $('#@containerId').find('.fileuploadProgress').fadeOut('fast');
            },
            progressall: function (e, data) {
                $('#@containerId').find('.fileuploadProgress').fadeIn('fast');
            }
        }).bind('fileuploadprocessfail', function (e, data) {
            alert(data.files[data.index].error);
        });
    </script>
}
